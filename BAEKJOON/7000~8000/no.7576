import sys
input = sys.stdin.readline
from collections import deque


M, N = map(int, input().strip().split())

graph = []
for _ in range(N):
    graph.append(list(map(int, input().strip().split())))

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

queue = deque()

def bfs():
    count = -1
    while queue:
        count += 1

        for _ in range(len(queue)):
            x, y = queue.popleft()

            for i in range(4):
                nx = x + dx[i]
                ny = y + dy[i]
                if 0 <= nx < N and 0 <= ny < M:
                    if graph[nx][ny] == 0:
                        graph[nx][ny] = graph[x][y] + 1
                        queue.append((nx, ny))

    return count


for i in range(N):
    for j in range(M):
        if graph[i][j] == 1:
            queue.append((i, j))

result = bfs()
for i in range(N):
    for j in range(M):
        if graph[i][j] == 0:
            print(-1)
            exit()

print(result)
