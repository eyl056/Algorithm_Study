import sys
input = sys.stdin.readline


def prime_list(n):
    # 에라토스테네스의 체 초기화: n개 요소에 True 설정(소수로 간주)
    sieve = [True] * n

    # n의 최대 약수가 sqrt(n) 이하이므로 i=sqrt(n)까지 검사
    m = int(n ** 0.5)
    for i in range(2, m + 1):
        if sieve[i] == True:           # i가 소수인 경우
            for j in range(i+i, n, i): # i이후 i의 배수들을 False 판정
                sieve[j] = False

    # 소수 목록 산출
    return [i for i in range(2, n) if sieve[i] == True]


n = int(input().strip())

count = 0
interval_sum = 0
end = 0
start = 0

primeList = prime_list(n + 1)
# 데이터의 개수 m
m = len(primeList)

for start in range(m):
    # end를 가능한 만큼 이동시키기
    while interval_sum < n and end < m:
        interval_sum += primeList[end]
        end += 1
    # 부분합이 n일 때 카운트 증가
    if interval_sum == n:
        count += 1
    interval_sum -= primeList[start]


print(count)
