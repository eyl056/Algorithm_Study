import sys
input = sys.stdin.readline


def dfs(V):
    visited[V] = 1
    print(V, end=' ')
    for i in range(1, N + 1):
        if visited[i] == 0 and graph[V][i] == 1:
            dfs(i)


def bfs(V):
    visited[V] = 1
    queue = [V]
    while queue:
        V = queue.pop(0)
        print(V, end=' ')
        for i in range(1, N + 1):
            if visited[i] == 0 and graph[V][i] == 1:
                queue.append(i)
                visited[i] = 1


if __name__ == "__main__":
    N, M, V = map(int, input().strip().split())

    graph = [[0] * (N + 1) for _ in range(N+1)]
    visited = [0] * (N + 1)

    for _ in range(M):
        a, b = map(int, input().strip().split())

        graph[a][b] = 1
        graph[b][a] = 1

    dfs(V)
    print()
    visited = [0] * (N + 1)
    bfs(V)
